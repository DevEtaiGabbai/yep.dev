generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(cuid())
  name              String?
  email             String         @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  isSubscribed      Boolean        @default(false)
  stripeCustomerId  String?

  // OAuth provider fields
  provider          String?        // "google", "github", "credentials"
  providerAccountId String?
  accessToken       String?        @db.Text
  refreshToken      String?        @db.Text
  idToken           String?        @db.Text
  tokenType         String?
  scope             String?
  expiresAt         Int?

  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  conversations     Conversation[]
  projects          Project[]

  @@unique([provider, providerAccountId])
}

model Conversation {
  id         String     @id @default(uuid())
  title     String?
  project    Project?   @relation(fields: [projectId], references: [id])
  projectId  String?    @unique // <- required for 1-to-1
  messages   Message[]
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  templateName  String?
  sendFirst     Boolean    @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id             String       @id @default(cuid())
  role           String       // "user", "assistant", "system"
  content        String       @db.Text
  createdAt      DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String
}



model Project {
  id            String         @id @default(uuid())
  name          String
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  files         File[]
  conversation  Conversation?  // <-- Remove fields & references here
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  downloadUrl   String?
}

model File {
  id         String   @id @default(uuid())
  name       String   // e.g., index.js, README.md
  content    String   // file content
  path       String   // relative path inside the project
  mimeType   String   // e.g., text/plain, application/json
  size       Int      // in
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
